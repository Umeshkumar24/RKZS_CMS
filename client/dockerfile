# Stage 1: Build the React application
# Use a Node.js image to build the React app
FROM node:20-alpine as builder

# Set the working directory inside the container
WORKDIR /

# Copy package.json and package-lock.json (or yarn.lock)
# to install dependencies
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application code
COPY . .

# Build the React application for production
# This command assumes your build script is 'npm run build'
RUN npm run build

# Stage 2: Serve the application with Nginx
# Use a lightweight Nginx image
FROM nginx:alpine

# Copy the built application files from the builder stage
# to the Nginx html directory
COPY --from=builder /build /usr/share/nginx/html

# Copy a custom Nginx configuration file (optional, but recommended)
# This is useful for handling client-side routing (like with React Router)
# If you don't have a custom nginx.conf, you can remove this line.
# COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Command to run Nginx
CMD ["nginx", "-g", "daemon off;"]

# Note: If you are using client-side routing (e.g., React Router),
# you might need a custom nginx.conf file to redirect all requests
# to index.html. A simple nginx.conf could look like this:
#
# server {
#   listen 80;
#   location / {
#     root /usr/share/nginx/html;
#     index index.html index.htm;
#     try_files $uri $uri/ /index.html; # This line is crucial for client-side routing
#   }
# }
